plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.github.sherter.google-java-format' version '0.9'
    id 'jacoco'
}

group = 'com.arcode'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'com.google.guava', name: 'guava', version: '32.1.3-jre'

    testRuntimeOnly group: 'org.mockito', name: 'mockito-core', version: '5.6.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
}

tasks.named('test') {
    useJUnitPlatform()
}
jacocoTestReport {
    dependsOn test
}

jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('test-coverage')
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('test-coverage')
    }
}

build.dependsOn(tasks.googleJavaFormat)
verifyGoogleJavaFormat.mustRunAfter(tasks.googleJavaFormat)

googleJavaFormat {
    // for more details : https://github.com/sherter/google-java-format-gradle-plugin
    toolVersion = '1.7'
    //toolVersion = '1.1-SNAPSHOT'
}
